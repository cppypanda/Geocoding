---
description: 
globs: 
alwaysApply: false
---
### 开发准则：单一功能，单一实现 (Single Functionality, Single Implementation)

**核心思想:**
对于应用中任何一个明确的功能点（例如："地址清洗"、"行政区划补全"），其核心实现逻辑在代码库中应当**只存在一份**。

**执行规则:**
1.  **先寻找**: 在为任何需求（无论是新功能还是bug修复）编写代码前，必须先在现有代码库中寻找是否已存在能够实现该目的的函数或模块。
2.  **再复用**: 如果找到了，必须直接复用它。
3.  **后扩展**: 如果找到了，但功能不完全满足新需求，那么应该**在原有函数上进行增强和扩展**，使其能够同时兼容新旧两种场景，而不是另写一个新函数。

**背景案例:**
在重构"地址输入面板"功能时，曾发现存在两套不同的"地址清洗"逻辑：一个用于已废弃的手动按钮，一个用于粘贴事件。这导致了功能不一致和代码冗余。作为修正，我们移除了冗余代码，并将更强大的清洗逻辑确立为此功能的唯一实现源头。这一准则旨在避免未来发生类似问题。


在修改任何函数调用之前，我必须先去读取该函数的定义，以100%确认其所有参数的名称、类型和结构。
